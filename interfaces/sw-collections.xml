<?xml version="1.0" encoding="utf-8"?>

<node name="/Collections_Iface"
      xmlns:tp="http://telepathy.freedesktop.org/wiki/DbusSpec#extensions-v0"
      xmlns:doc="http://www.freedesktop.org/dbus/1.0/doc.dtd">
  <interface name="com.meego.libsocialweb.Collections">
    <doc:doc>
      <doc:summary>An interface representing named collections of
      photos (eg. albums), videos (eg. channels) or both (eg. Flickr sets).
      </doc:summary>
    </doc:doc>

    <method name="GetList" tp:name-for-bindings="Get_List">
      <doc:doc>
        <doc:description>
          <doc:para>
            Retrieve a list of photo/video collections the user has on the service.
          </doc:para>
        </doc:description>
      </doc:doc>

      <arg name="collection_list" type="a(sssuia{ss})"
           tp:type="Collection_Details[]" direction="out">
        <doc:doc>
          <doc:summary>A list of <tp:member-ref>Collection_Details</tp:member-ref>
            representing remote collections on the service.</doc:summary>
        </doc:doc>
      </arg>
    </method>

    <method name="GetDetails" tp:name-for-bindings="Get_Details">
      <doc:doc>
        <doc:description>
          <doc:para>
            Get details of given collection.
          </doc:para>
        </doc:description>
      </doc:doc>

      <arg name="collection_id" type="s" direction="in">
        <doc:doc>
          <doc:summary>
            The service specific identifier of the collection.
          </doc:summary>
        </doc:doc>
      </arg>

      <arg name="collection_details" type="(sssuia{ss})"           tp:type="Collection_Details[]" direction="out">
        <doc:doc>
          <doc:summary>The <tp:member-ref>Collection_Details</tp:member-ref>
            of the given collection.</doc:summary>
        </doc:doc>
      </arg>
    </method>

    <method name="Create" tp:name-for-bindings="Create">
      <doc:doc>
        <doc:description>
          <doc:para>
            Create a new collection.
          </doc:para>
        </doc:description>
      </doc:doc>

      <arg name="collection_id" type="s" direction="out">
        <doc:doc>
          <doc:summary>
            The service specific identifier for the new collection.
          </doc:summary>
        </doc:doc>
      </arg>

      <arg name="collection_name" type="s" direction="in">
        <doc:doc>
          <doc:summary>The name of the new collection.</doc:summary>
        </doc:doc>
      </arg>

      <arg name="supported_types" type="u"
           tp:type="Collection_Media_Types" direction="in">
        <doc:doc>
          <doc:summary>The media types this collection should support.
          </doc:summary>
        </doc:doc>
      </arg>

      <arg name="collection_parent" type="s" direction="in">
        <doc:doc>
          <doc:summary>The service specific identifier of the new
          collection's parent or an empty string for a top-level
          collection.</doc:summary>
        </doc:doc>
      </arg>

      <arg name="extra_parameters" type="a{ss}" direction="in">
        <doc:doc>
          <doc:summary>Extra, service specific parameters,
            such as "description".</doc:summary>
        </doc:doc>
      </arg>
    </method>

    <method name="GetCreatableTypes"
            tp:name-for-bindings="Get_Creatable_Types">
      <doc:doc>
        <doc:description>
          <doc:para>
            Retrieve a list of collection types a user can create on
            this service.
          </doc:para>
        </doc:description>
      </doc:doc>

      <arg name="media_types_list" type="au"
           tp:type="Collection_Media_Types[]" direction="out">
        <doc:doc>
          <doc:summary>A list of
            <tp:member-ref>Collection_Media_Types</tp:member-ref>
            bitfields of supported collection types we could create.
          </doc:summary>
        </doc:doc>
      </arg>
    </method>

    <tp:struct name="Collection_Details" array-name="Collection_Details_List">
      <tp:member type="s" name="Collection_Id">
        <doc:doc>A service-specific identifier for the collection.</doc:doc>
      </tp:member>
      <tp:member type="s" name="Collection_Name">
        <doc:doc>The human readable name of the collection.</doc:doc>
      </tp:member>
      <tp:member type="s" name="Collection_Parent">
        <doc:doc>A service-specific identifier for the collection's
        parent, or an empty string for a top-level collection.</doc:doc>
      </tp:member>
      <tp:member type="u" tp:name="Collection_Media_Types"
                 name="Supported_Media_Types">
        <doc:doc>Supported types of media in this collection.</doc:doc>
      </tp:member>
      <tp:member type="i" name="Item_Count">
        <doc:doc>The number of items currently in the collection, or -1 if unknown.</doc:doc></tp:member>
      <tp:member type="a{ss}" name="Attributes">
        <doc:doc>Additional collection attributes.</doc:doc>
      </tp:member>
    </tp:struct>

    <tp:flags name="Collection_Media_Types"
              value-prefix="Collection_Media_Type">
      <tp:flag name="Collections" value="1"/>
      <tp:flag name="Photos" value="2"/>
      <tp:flag name="Videos" value="4"/>
    </tp:flags>

  </interface>
</node>
